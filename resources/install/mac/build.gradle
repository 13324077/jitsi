import org.apache.tools.ant.filters.ReplaceTokens

def dmgDir = "${buildDir}/install/dmg"

task copyInfoPlist(group: 'installer-mac') {
    doLast {
        // cannot be a copy task itself (the classpath must be evaluated on exec, not config)
        copy {
            from "${projectDir}/resources/install/mac/Info.plist"
            into "${dmgDir}/Jitsi.app/Contents/"
            filter(ReplaceTokens, tokens: [
                    CLASSPATH_STRINGS         : (
                            project(':launcher').configurations.runtimeClasspath.collect {
                                "<string>\$JAVAROOT/lib/${it.name}</string>"
                            } << '<string>$JAVAROOT/config</string>'
                    ).join('\n').toString(),
                    CFBundleShortVersionString: project.version.replaceAll(/[^0-9\.]/, '').toString(),
                    CFBundleVersion           : project.version.toString(),
                    JRE_VERSION               : "${project.property('application.jre.version')}-jre".toString(),
            ])
        }
    }
}

task prepareDmgTarget(type: Sync, group: 'installer-mac', dependsOn: [
        installMacDist,
        copyInfoPlist
]) {
    from installMacDist.outputs.files
    into dmgDir
    preserve {
        include '**/*.plist'
    }
}

task createDmg(type: Exec, group: 'installer-mac', dependsOn: prepareDmgTarget) {
    // TODO: sign
    workingDir "${buildDir}/install"
    commandLine "${projectDir}/resources/install/mac/build-dmg.sh"
}
